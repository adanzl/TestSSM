<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- 为这个mapper指定一个唯一的namespace，namespace的值习惯上设置成包名+sql映射文件名，这样就能够保证namespace的值是唯一的
例如namespace="me.gacl.mapping.userMapper"就是me.gacl.mapping(包名)+userMapper(userMapper.xml文件去除后缀)
 -->
<mapper namespace="com.test.webservice.dao.UserMapper">
    <!-- 自定义返回结果集 -->
    <resultMap id="userMap" type="com.test.webservice.model.UserBean">
        <id property="id" column="id" javaType="java.lang.Integer"/>
        <result property="name" column="name" javaType="java.lang.String"/>
    </resultMap>
    <!-- 在select标签中编写查询的SQL语句， 设置select标签的id属性为getUser，id属性值必须是唯一的，不能够重复
    使用parameterType属性指明查询时使用的参数类型，resultType属性指明查询返回的结果集类型
    resultType="me.gacl.domain.User"就表示将查询结果封装成一个User类的对象返回
    User类就是users表所对应的实体类
    -->
    <cache type="com.test.webservice.cache.RedisCache"/> <!-- *映射语句 -->
    <!--
        根据id查询得到一个user对象
     -->
    <select id="getUser" parameterType="int"
            resultType="com.test.webservice.model.UserBean">
        select * from users
        <where>
            1=1
            <if test="id!=null">
                and id=#{id}
            </if>
        </where>
    </select>

    <select id="selectAllUser" resultMap="userMap">
        select * from users
    </select>

    <!--
        根据id查询得到一个订单对象
    -->
    <!--<select id="getOrder" parameterType="int"-->
    <!--resultType="com.test.webservice.model.OrderBean">-->
    <!--select * from orders where id=#{id}-->
    <!--</select>-->

    <insert id="addUser" parameterType="com.test.webservice.model.UserBean" keyProperty="id" useGeneratedKeys="true">
        insert into users (
            name
        ) values (
          #{user_name}
        )
    </insert>
</mapper>